<!DOCTYPE html>
<html lang="en" class="h-100">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="" />
    <meta name="author" content="SQ" />
    <title>to-do list</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css"
    />
    <link rel="stylesheet" href="./styles/styles.css" />

  </head>

  <body class="d-flex flex-column h-100">
    <header class="p-2 fixed-top bg-success text-white bg-opacity-75">
      <div class="container">
        <div class="d-flex flex-wrap align-items-center justify-content-center">
          <h1>DSU To-Do List </h1>
        </div>
      </div>
    </header>

    <main class="flex-shrink-0 my-5">
        <div class="container">
          <div id="task-container" class="row">
          
          </div>
        </div>
    </main>

    <footer class="footer mt-auto py-3 bg-success text-white bg-opacity-75">
      <div class="container">
        <div class="input-group mb-3">
          <input type="text" id="task-input" class="form-control" placeholder="to-do task...">
          <button type="button" onclick="addNewTask()" class="btn btn-success" id="add-button">Add</button>
          <button type="button" onclick="updateTaskValue(this)" class="btn btn-success" id="update-button" disabled>Update</button>
        </div>
        <div class="d-flex flex-wrap align-items-center justify-content-center">
          Copyright Telus <%= (new Date()).getFullYear() %>
        </div>
      </div>
    </footer>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p"
      crossorigin="anonymous"
    ></script>
    <script>
      const url = 'http://localhost:3030/to-do'

      const handleDataPrinting = (data) => {
          let children = '';
          const mainDiv = document.getElementById('task-container');

          if(data !== undefined) {
              if(data.length !== 0) {
                children = data.map((task, index) => 
                (
                    `
                      <div id="tasks" class="col-10 offset-1 d-flex justify-content-between">
                        <div class="input-group-text">
                          <input class="form-check-input mt-0" type="checkbox" name="${task.id}" onclick="updateTaskStatus(this)" ${task.status==true&&("checked")}/>
                        </div>
                        <p ${task.status==true&&("class='text-decoration-line-through'")}>${task.task}</p>
                        <div>
                          <button id="update" value="${task.id}" class="btn me-3 btn-warning" onclick="handleButtonDisabling(this)"
                          >Update</button>
                          <button id="delete" value="${task.id}" class="btn me-3 btn-danger" onclick="deleteTask(this)">Delete</button>
                        </div>
                      </div>
                    `
                ));
              } else {
                  children = `
                      <div id="tasks" class="col-10 offset-1 d-flex justify-content-between">
                          <h3>empty to-do list...</h3>
                      </div>
                  `;
              }
          }
          mainDiv.innerHTML = ((String(children)));
      }

      const sendData = (data, method) => {
        let requestOptions = {
          method: method,
          headers: {
            'Content-Type': 'application/json'
          },
          body: data,
        };

        fetch(url, requestOptions)
          .then(response => response.json())
          .then(result => console.log(result))
          .catch(error => console.log('error', error)
        );
        getValues();
      };

      const handleButtonDisabling = (event) => {
        const disabled = document.getElementById('update-button').disabled;
        if(disabled) {
          document.getElementById('add-button').disabled = true;
          document.getElementById('update-button').disabled = false;
          document.getElementById('update-button').value = event.value;
        } else {
          document.getElementById('add-button').disabled = false;
          document.getElementById('update-button').disabled = true;
        }
      };

      const updateTaskValue = (event) => {
        const newValue = document.getElementById('task-input').value;
        if(newValue != '') {
          let list = JSON.parse(window.localStorage.getItem('list'));
          const id = event.value;
          list.map((value,index) => {
            if(parseInt(value.id) === parseInt(id)) {
              list[index].task = newValue;
              sendData(JSON.stringify(list), 'PUT')
            }
          });
          console.log(list);
        }
      };

      const updateTaskStatus = (event) => {
        const id = event.name;
        let list = JSON.parse(window.localStorage.getItem('list'));
        list.map((value,index) => {
          if(parseInt(value.id) === parseInt(id)) {
            list[index].status = !list[index].status;
            sendData(JSON.stringify(list), 'PUT');
          }
        });
        console.log(list);
      }


      const deleteTask = (event) => {
        const id = { id: event.value };
        let list = JSON.parse(window.localStorage.getItem('list'));
        const filtered = list.filter(task => parseInt(task.id) !== parseInt(id.id));
        console.log(filtered);
        window.localStorage.setItem('list',JSON.stringify(filtered));
        sendData(JSON.stringify(id), 'DELETE');
      };

      const addNewTask = () => {
        const value = document.getElementById('task-input').value;
        if(value !== '') {
          let list = JSON.parse(window.localStorage.getItem('list'));
          const id = list.length !== 0 ? (  parseInt(list[list.length-1].id) + 1) : 1;
          const task = {
            id: id,
            task: value,
            status: false
          };
          list === undefined ? list = task : (list.push(task));
          window.localStorage.setItem('list',JSON.stringify(list));
          document.getElementById('task-input').value = '';
          sendData(JSON.stringify(task), 'POST');
        }
      }

      const getValues = () => {
          let local= JSON.parse(window.localStorage.getItem('list'));
          const requestOptions = {
                method: 'GET'
          };
          if (local === null) { 
            fetch(url, requestOptions)
              .then(response => response.json())
              .then(result => {
                  handleDataPrinting(result);
                  window.localStorage.setItem("list",JSON.stringify(result)); 
                })
              .catch(error => console.log('error', error));
          } else {
            fetch(url, requestOptions)
                .then(response => response.json())
                .then(result => {
                  console.log(result === local);
                  if(result !== local) {
                    window.localStorage.removeItem('list');
                    window.localStorage.setItem("list",JSON.stringify(result));
                  }
                  handleDataPrinting(local);
                  })
                .catch(error => console.log('error', error));
          }
      };

      getValues();
    </script>
  </body>
</html>
